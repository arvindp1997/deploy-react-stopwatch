{"version":3,"sources":["stopwatch/utils/timeFormat.js","stopwatch/components/Timer.js","stopwatch/components/Controls.js","stopwatch/components/LapTime.js","stopwatch/components/LapTimeList.js","stopwatch/constants/config.js","stopwatch/components/Stopwatch.js","App.js","index.js","logo.svg"],"names":["zeroAdd","number","size","s","String","length","timeFormat","miliseconds","remaining","hh","parseInt","mm","ss","Timer","time","this","props","className","Component","proptTypes","PropTypes","defaultProps","Controls","isRunning","start","stop","reset","addLapTime","onClick","ref","disabled","bool","func","isRequired","LapTime","lap","LapTimeList","timeList","map","index","key","array","Stopwatch","state","timerRef","extraTime","setState","setInterval","updateTimer","Config","clearInterval","App","src","logo","alt","id","ReactDOM","render","document","getElementById","module","exports"],"mappings":"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","file":"static/js/main.443dcb01.chunk.js","sourcesContent":["\r\n\r\n//add extra zeros at beginning if time is less than 10\r\n\r\nfunction zeroAdd(number , size = 2){\r\n \r\n    let s=String(number);\r\n\r\n    while(s.length<size)\r\n    {\r\n        s='0'+s;\r\n    }\r\n    return s;\r\n}\r\n\r\n//converting time from ms into hh:mm:ss.S string\r\n\r\nexport default function timeFormat(miliseconds){\r\n    let remaining= miliseconds / 1000;\r\n\r\n    const hh=parseInt( remaining / 3600 , 10);\r\n\r\n    remaining=remaining % 3600;\r\n\r\n    const mm=parseInt( remaining / 60 , 10);\r\n    const ss=parseInt( remaining % 60 , 10);\r\n\r\n    return `${zeroAdd( hh ) }:${zeroAdd( mm )} :${ zeroAdd( ss )} `;\r\n};","\r\nimport React ,{ PropTypes , Component } from 'react';\r\nimport './Timer.css';\r\nimport timeFormat from '../utils/timeFormat';\r\n\r\nclass Timer extends Component {\r\n\r\n    static proptTypes = {\r\n        time : PropTypes.number\r\n    };\r\n\r\n    static defaultProps = {\r\n        time :0\r\n    };\r\n\r\n    render() {\r\n         \r\n        const { time }=this.props;\r\n\r\n        return (\r\n            <div className=\"Timer\">\r\n                {timeFormat(time)}\r\n            </div>\r\n        );\r\n    }\r\n}\r\nexport default Timer;","import React, { Component, PropTypes } from 'react';\r\nimport './Controls.css';\r\n\r\nclass Controls extends Component {\r\n\r\n  static proptTypes = {\r\n    isRunning  : PropTypes.bool,\r\n    start      : PropTypes.func.isRequired,\r\n    stop       : PropTypes.func.isRequired,\r\n    reset      : PropTypes.func.isRequired,\r\n    addLapTime : PropTypes.func.isRequired \r\n  };\r\n\r\n  static defaultProps = {\r\n    isRunning : false\r\n  };\r\n\r\n  render() {\r\n    const { isRunning, start, stop, reset, addLapTime } = this.props;\r\n\r\n    return (\r\n      <div className=\"Controls\">\r\n        { !isRunning ?\r\n            <button\r\n              onClick={ start }\r\n              className=\"Controls__button\"\r\n              ref=\"startBtn\" > Start </button>\r\n          : null }\r\n\r\n        { isRunning ?\r\n          <button\r\n            onClick={ stop }\r\n            className=\"Controls__button\"\r\n            ref=\"stopBtn\" > Stop </button>\r\n        : null }\r\n\r\n        <button\r\n          onClick={ reset }\r\n          disabled={ isRunning }\r\n          className=\"Controls__button\"\r\n          ref=\"resetBtn\" > Reset </button>\r\n\r\n        <button\r\n          onClick={ addLapTime }\r\n          disabled={ !isRunning }\r\n          className=\"Controls__button\"\r\n          ref=\"lapBtn\" > Lap Time </button>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Controls;","import React, { Component, PropTypes } from 'react';\r\nimport './LapTime.css';\r\n\r\nimport timeFormat from '../utils/timeFormat';\r\n\r\nclass LapTime extends Component {\r\n\r\n  static proptTypes = {\r\n    lap  : PropTypes.number,\r\n    time : PropTypes.number\r\n  };\r\n\r\n  static defaultProps = {\r\n    lap  : 0,\r\n    time : 0\r\n  };\r\n\r\n  render() {\r\n\r\n    const { lap, time } = this.props;\r\n\r\n    return (\r\n      <div className=\"LapTime\">\r\n        <span className=\"LapTime__lap\" >{ lap }</span>\r\n        <span className=\"LapTime__time\" >{ timeFormat( time ) }</span>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default LapTime;","import React, { Component, PropTypes } from 'react';\r\nimport './LapTimeList.css';\r\n\r\nimport LapTime from './LapTime';\r\n\r\nclass LapTimeList extends Component {\r\n\r\n  static proptTypes = {\r\n    timeList : PropTypes.array\r\n  };\r\n\r\n  static defaultProps = {\r\n    timeList : []\r\n  };\r\n\r\n  render() {\r\n\r\n    const { timeList } = this.props;\r\n\r\n    return (\r\n      <div className=\"LapTimeList\">\r\n        <div className=\"LapTimeList__listwrap\">\r\n\r\n          <div className=\"LapTimeList__headers\">\r\n            <span> <br/><i>Lap Time History</i></span> \r\n          </div>\r\n\r\n          <ul className=\"LapTimeList__list\" > \r\n            {\r\n              timeList.map( (time, index) => {\r\n                return (\r\n                  <li key={ index }>\r\n                    <LapTime lap={ index + 1 } time={ time }  />\r\n                  </li>\r\n                )\r\n              })\r\n            }\r\n          </ul>\r\n\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default LapTimeList;","\r\nexport default{\r\n    updateInterval:100 //our stopwatch will be updated in every 100 miliseconds\r\n}","import React, { Component } from 'react';\r\nimport './Stopwatch.css';\r\n\r\nimport Timer         from './Timer';\r\nimport Controls      from './Controls';\r\nimport LapTimeList   from './LapTimeList';\r\n\r\nimport Config        from '../constants/config';\r\n\r\nfunction getDefaultState() {\r\n  return {\r\n    isRunning : false,\r\n    time      : 0,\r\n    timeList  : []    \r\n  }\r\n}\r\n\r\nclass Stopwatch extends Component {\r\n\r\n  constructor( props ) {\r\n    super(props);\r\n    this.state    = getDefaultState();\r\n    this.timerRef = null;\r\n  }\r\n\r\n  updateTimer(extraTime) {\r\n    const { time } = this.state;\r\n    this.setState({ time : time + extraTime });\r\n  }\r\n\r\n  start() {\r\n    this.setState({\r\n      isRunning : true \r\n    }, () => {\r\n      this.timerRef = setInterval(\r\n        () => { this.updateTimer( Config.updateInterval ) }, Config.updateInterval\r\n      )\r\n    });\r\n  }\r\n\r\n  stop() {\r\n    this.setState({\r\n      isRunning : false \r\n    }, () => {\r\n      clearInterval(this.timerRef);\r\n    });\r\n  }\r\n\r\n  reset() {\r\n    this.setState(getDefaultState());\r\n  }\r\n\r\n  addLapTime() {\r\n    const { time, timeList } = this.state;\r\n\r\n    this.setState({\r\n      timeList : [ ...timeList, time ] \r\n    });\r\n  }\r\n\r\n  render() {\r\n\r\n    const { isRunning, time, timeList } = this.state;\r\n\r\n    return (\r\n      <div className=\"Stopwatch\">\r\n\r\n        <h1> Stopwatch </h1>\r\n\r\n        <Timer time={ time } />\r\n\r\n        <Controls\r\n          isRunning={ isRunning } \r\n          start={ () => this.start() }\r\n          stop={ () => this.stop() }\r\n          reset={ () => this.reset() }\r\n          addLapTime={ () => this.addLapTime() }\r\n        />\r\n\r\n        <LapTimeList timeList={ timeList } />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Stopwatch;\r\n\r\n","import React, { Component } from 'react';\nimport logo from './logo.svg';\nimport './App.css';\n\nimport { Stopwatch } from './stopwatch';\n\nclass App extends Component {\n\n  render() {\n    return (\n      <div className=\"App\">\n        <div className=\"App-header\">\n          <img src={logo} className=\"App-logo\" alt=\"logo\" />\n        </div>\n        <div id=\"stopwatch\">\n\n        <Stopwatch />\n        </div>\n        \n      </div>\n    );\n  }\n}\n\nexport default App;","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './App';\r\nimport './index.css';\r\n\r\nReactDOM.render(\r\n  <App />,\r\n  document.getElementById('root')\r\n);","module.exports = __webpack_public_path__ + \"static/media/logo.5d5d9eef.svg\";"],"sourceRoot":""}